package sqala.ast.expr

enum SqlBinaryOperator(val operator: String, val precedence: Int):
    case Json extends SqlBinaryOperator("->", 80)
    case JsonText extends SqlBinaryOperator("->>", 80)
    case Times extends SqlBinaryOperator("*", 70)
    case Div extends SqlBinaryOperator("/", 70)
    case Plus extends SqlBinaryOperator("+", 60)
    case Minus extends SqlBinaryOperator("-", 60)
    case EuclideanDistance extends SqlBinaryOperator("<->", 50)
    case CosineDistance extends SqlBinaryOperator("<=>", 50)
    case DotDistance extends SqlBinaryOperator("<#>", 50)
    case Concat extends SqlBinaryOperator("||", 40)
    case Equal extends SqlBinaryOperator("=", 30)
    case NotEqual extends SqlBinaryOperator("<>", 30)
    case In extends SqlBinaryOperator("IN", 30)
    case NotIn extends SqlBinaryOperator("NOT IN", 30)
    case GreaterThan extends SqlBinaryOperator(">", 30)
    case GreaterThanEqual extends SqlBinaryOperator(">=", 30)
    case LessThan extends SqlBinaryOperator("<", 30)
    case LessThanEqual extends SqlBinaryOperator("<=", 30)
    case Like extends SqlBinaryOperator("LIKE", 30)
    case NotLike extends SqlBinaryOperator("NOT LIKE", 30)
    case SimilarTo extends SqlBinaryOperator("SIMILAR TO", 30)
    case NotSimilarTo extends SqlBinaryOperator("NOT SIMILAR TO", 30)
    case And extends SqlBinaryOperator("AND", 20)
    case Or extends SqlBinaryOperator("OR", 10)
    case Custom(override val operator: String) extends SqlBinaryOperator(operator, 0)

enum SqlUnaryOperator(val operator: String):
    case Positive extends SqlUnaryOperator("+")
    case Negative extends SqlUnaryOperator("-")
    case Not extends SqlUnaryOperator("NOT")
    case Custom(override val operator: String) extends SqlUnaryOperator(operator)